# Generated by Django 4.1.1 on 2022-10-14 16:01

from django.db import migrations, models
import django.db.models.deletion
import modelcluster.contrib.taggit
import modelcluster.fields
import wagtail.blocks
import wagtail.fields
import wagtail.images.blocks


class Migration(migrations.Migration):

    dependencies = [
        ('wagtailcore', '0077_alter_revision_user'),
        ('taggit', '0005_auto_20220424_2025'),
        ('blog', '0020_githubindexpage'),
    ]

    operations = [
        migrations.CreateModel(
            name='GithubTrendingPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('intro', models.CharField(blank=True, max_length=250)),
                ('date', models.DateField(verbose_name='Post date')),
                ('body', wagtail.fields.StreamField([('githubcodes', wagtail.blocks.StructBlock([('codename', wagtail.blocks.CharBlock()), ('codeintro', wagtail.blocks.CharBlock()), ('codeurl', wagtail.blocks.CharBlock()), ('codedetails', wagtail.blocks.RichTextBlock()), ('codephoto', wagtail.images.blocks.ImageChooserBlock(required=False))]))], use_json_field=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='GithubTrendingTagIndexPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='GithubTrendingPageTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='tagged_items', to='blog.githubtrendingpage')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_items', to='taggit.tag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='githubtrendingpage',
            name='tags',
            field=modelcluster.contrib.taggit.ClusterTaggableManager(blank=True, help_text='A comma-separated list of tags.', through='blog.GithubTrendingPageTag', to='taggit.Tag', verbose_name='Tags'),
        ),
    ]
